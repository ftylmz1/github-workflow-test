# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      redeploy:
        description: 'REQUIRED'
        required: true
        default: 'true'
      cbs:
        description: 'CBS'
        required: true
        default: 'testcbs'
      environment:
        description: 'ENVIRONMENT'
        required: true
        default: 'dev'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.redeploy == 'true' }}
    
    environment:
      name: ${{ github.event.inputs.environment }}
    
    env:
      ENV_ID: ${{ secrets.ENV_ID }}
      ENV_TEST: "FTYLMZ"
      TEST_ENVIRONMENT: ${{ github.event.inputs.environment }}
      TEST_CBS: ${{ github.event.inputs.cbs }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          echo "ENV - ENV ID: $ENV_ID"
          echo "ENV - ENV TEST: $ENV_TEST"
          echo "SECRETS - ENV ID: ${{ secrets.ENV_ID }}"
          echo "SECRETS - ENV TEST:${{ secrets.ENV_TEST }}"
          echo "ENV ID AND TEST: $ENV_ID $ENV_TEST"
          echo "INPUTS - TEST_ENVIRONMENT: ${{ github.event.inputs.environment }}"
          echo "INPUTS - TEST_ENVIRONMENT: ${{ github.event.inputs.cbs }}"
          echo "ENV - TEST_ENVIRONMENT: $TEST_ENVIRONMENT"
          echo "ENV - TEST_CBS: $TEST_CBS"
      # Print all ENV out
      - name: Print all env out
        run: |
          export ENV_SOLUTION_PATH=${{ secrets.SOLUTION_PATH }}
          echo "$ENV_SOLUTION_PATH"
